[user]
	name = Pierre Dangauthier
	email = pierre.dangauthier@smarkets.com
[core]
	editor = code -w
	excludesfile = /home/pierre/.gitignore
[push]
	default = simple
[format]
    pretty = %Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset
[color]
    diff = auto
    status = auto
    branch = auto
    interactive = auto
    ui = true
    pager = true
[grep]
    lineNumber = true
[alias]
    st = status
    s = stash
    sp = stash pop

    ci = commit
    cia = commit --all
    ciaa = commit --all --amend
    ciam = commit --amend

    # shows diff next to commits in log
    lp = log -p
    br = branch
    # shows all branches
    bra = branch -a
    # Prints "graphical", compact branch history
    lg = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cd) %C(bold blue)<%an>%Creset' --abbrev-commit
    # Prints "graphical", compact all-branches history
    lga = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cd) %C(bold blue)<%an>%Creset' --abbrev-commit --all
    # Prints "graphical", not-that-compact history of current branch
    ll = log --graph --format=medium
    ds = diff --staged
    co = checkout
    su = submodule update
    sui = submodule update --init

    pom = push origin master
    f = fetch

    # Borrowed from http://stackoverflow.com/questions/9651898/is-there-a-git-sed-or-equivalent/9652183#9652183
    sed = ! git grep -z --full-name -l '.' | xargs -0 sed -i -e


[branch]
    autosetuprebase = always
[push]
    default = upstream
[commit]
	verbose = true

[merge]
  tool = meld
[diff "jupyternotebook"]
	command = git-nbdiffdriver diff
[merge "jupyternotebook"]
	driver = git-nbmergedriver merge %O %A %B %L %P
	name = jupyter notebook merge driver
[difftool "nbdime"]
	cmd = git-nbdifftool diff \"$LOCAL\" \"$REMOTE\"
[difftool]
	prompt = false
[mergetool "nbdime"]
	cmd = git-nbmergetool merge \"$BASE\" \"$LOCAL\" \"$REMOTE\" \"$MERGED\"
[mergetool]
	prompt = false
